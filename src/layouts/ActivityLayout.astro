---
import { Img } from 'astro-imagetools/components'
import { renderImg } from "astro-imagetools/api";
import { stringifyUrl } from 'query-string'
import { DateTime } from 'luxon'
import BaseLayout from 'layouts/BaseLayout.astro'
// @ts-expect-error
import type { Activity } from 'types/index.d.ts'

export interface Props {
  content: Activity
}

const { content } = Astro.props as Props

const cause = content.causeAndProjectType.substring(
  0, content.causeAndProjectType.indexOf(':')
)

const format = 'jpeg'
const { img } = await renderImg({ src: content.image, alt: "", format })
const srcset = img.match(/srcset="(.*)"/)[1]
const width = img.match(/width="(.*)"/)[1]
const height = img.match(/height="(.*)"/)[1]

const { coordinates } = JSON.parse(content.geo || '{}')
const mapQuery = coordinates ? reverseCoordinates(coordinates) : content.address

function reverseCoordinates(c: [number, number]) {
  // Google expects [lat, lng], whereas the Map widget of NetlifyCMS returns [lng, lat]
  return [c[1], c[0]].join()
}

---

<BaseLayout title={content.title}>
  <Fragment slot="head">
    <meta property="og:title" content={content.title} />
    <meta property="og:type" content="article" />
    <meta property="og:url" content={content.url} />
    <meta property="og:image" content={srcset} />
    <meta property="og:image:type" content={'image/' + format} />
    <meta property="og:image:alt" content=" " />
    <meta property="og:image:width" content={width} />
    <meta property="og:image:height" content={height} />
    <meta property="og:description" content={content.description} />
    <meta property="og:site_name" content="Lions Club of Bangalore Prerana" />
  </Fragment>
  <article>
    <header>
      <h2>{content.title}</h2>
      <Img src={content.image} alt="" width={984} attributes={{ img: { class: 'rounded' } }} />
      <dl>
        <div>
          <dt>Date</dt>
          <dd>
            <time datetime={content.date}>{DateTime.fromISO(content.date)
              .setLocale('en-IN')
              .toLocaleString(DateTime.DATE_FULL)}</time>
          </dd>
        </div>
        <div>
          <dt>Cause</dt>
          <dd>{cause}</dd>
        </div>
        <div>
          <dt>Address</dt>
          <dd>
            <address>{content.address}</address><a href={stringifyUrl({ url: 'https://www.google.com/maps/search/' ,
              query: { api: 1, query: mapQuery } } )} target="_blank">Locate on map</a>
          </dd>
        </div>
        <div>
          <dt>Served</dt>
          <dd>{content.served} people</dd>
        </div>
      </dl>
    </header>
    <div class="content">
      <slot />
    </div>
  </article>
</BaseLayout>

<style>
  .content :global(img) {
    border-radius: 0.375rem;
  }

  .content :global(p:first-of-type:first-letter) {
    color: var(--color-pri-bg);
    float: left;
    font-family: Georgia, serif;
    font-size: 3rem;
    padding-top: 0.75rem;
    padding-right: 0.5rem;
    padding-left: 0.25rem;
  }

  dl {
    margin-bottom: 2rem;
  }

  dl>div {
    display: flex;
    font-size: small;
    padding-bottom: 0.375rem;
  }

  dt {
    flex-basis: 7ch;
    flex-shrink: 0;
    text-align: right;
  }

  dt::after {
    content: ': ';
  }

  dd {
    margin-left: 1ch;
  }

  address {
    font-style: inherit;
  }
</style>
